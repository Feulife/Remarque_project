{"id":"pages/notes.js","dependencies":[{"name":"C:\\Users\\DEI1\\Project_IT\\Remarque\\remarque_project\\.babelrc","includedInParent":true,"mtime":1590021027000},{"name":"C:\\Users\\DEI1\\Project_IT\\Remarque\\remarque_project\\package.json","includedInParent":true,"mtime":1660841774607},{"name":"react","loc":{"line":1,"column":18},"parent":"C:\\Users\\DEI1\\Project_IT\\Remarque\\remarque_project\\src\\pages\\notes.js","resolved":"C:\\Users\\DEI1\\Project_IT\\Remarque\\remarque_project\\node_modules\\react\\index.js"},{"name":"@apollo/client","loc":{"line":2,"column":30},"parent":"C:\\Users\\DEI1\\Project_IT\\Remarque\\remarque_project\\src\\pages\\notes.js","resolved":"C:\\Users\\DEI1\\Project_IT\\Remarque\\remarque_project\\node_modules\\@apollo\\client\\index.js"},{"name":"../components/Note","loc":{"line":3,"column":17},"parent":"C:\\Users\\DEI1\\Project_IT\\Remarque\\remarque_project\\src\\pages\\notes.js","resolved":"C:\\Users\\DEI1\\Project_IT\\Remarque\\remarque_project\\src\\components\\Note.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _client = require(\"@apollo/client\");\n\nvar _Note = _interopRequireDefault(require(\"../components/Note\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query note($id: ID!) {\\n    note(id: $id) {\\n      id\\n      createdAt\\n      content\\n      favoriteCount\\n      author {\\n        username\\n        id\\n        avatar\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar GET_NOTES = (0, _client.gql)(_templateObject());\n\nvar NotePage = function NotePage(props) {\n  var id = props.match.params.id;\n\n  var _useQuery = (0, _client.useQuery)(GET_NOTES, {\n    variables: {\n      id: id\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return _react.default.createElement(\"p\", null, \"Loading...\");\n  if (error) return _react.default.createElement(\"p\", null, \"Error!\");\n  return _react.default.createElement(_Note.default, {\n    note: data.note\n  });\n};\n\nvar _default = NotePage;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"pages/notes.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"pages/notes.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"pages/notes.js","original":{"line":3,"column":0}},{"generated":{"line":28,"column":0},"source":"pages/notes.js","original":{"line":5,"column":0}},{"name":"GET_NOTES","generated":{"line":28,"column":4},"source":"pages/notes.js","original":{"line":5,"column":6}},{"generated":{"line":28,"column":13},"source":"pages/notes.js","original":{"line":5,"column":15}},{"name":"gql","generated":{"line":28,"column":20},"source":"pages/notes.js","original":{"line":5,"column":18}},{"generated":{"line":28,"column":31},"source":"pages/notes.js","original":{"line":5,"column":15}},{"generated":{"line":28,"column":51},"source":"pages/notes.js","original":{"line":5,"column":0}},{"generated":{"line":30,"column":0},"source":"pages/notes.js","original":{"line":21,"column":0}},{"name":"NotePage","generated":{"line":30,"column":4},"source":"pages/notes.js","original":{"line":21,"column":6}},{"generated":{"line":30,"column":12},"source":"pages/notes.js","original":{"line":21,"column":14}},{"generated":{"line":30,"column":15},"source":"pages/notes.js","original":{"line":21,"column":17}},{"name":"NotePage","generated":{"line":30,"column":24},"source":"pages/notes.js","original":{"line":21,"column":6}},{"generated":{"line":30,"column":32},"source":"pages/notes.js","original":{"line":21,"column":17}},{"name":"props","generated":{"line":30,"column":33},"source":"pages/notes.js","original":{"line":21,"column":17}},{"generated":{"line":30,"column":38},"source":"pages/notes.js","original":{"line":21,"column":22}},{"generated":{"line":30,"column":40},"source":"pages/notes.js","original":{"line":21,"column":26}},{"generated":{"line":31,"column":0},"source":"pages/notes.js","original":{"line":23,"column":2}},{"name":"id","generated":{"line":31,"column":6},"source":"pages/notes.js","original":{"line":23,"column":8}},{"generated":{"line":31,"column":8},"source":"pages/notes.js","original":{"line":23,"column":10}},{"name":"props","generated":{"line":31,"column":11},"source":"pages/notes.js","original":{"line":23,"column":13}},{"generated":{"line":31,"column":16},"source":"pages/notes.js","original":{"line":23,"column":18}},{"name":"match","generated":{"line":31,"column":17},"source":"pages/notes.js","original":{"line":23,"column":19}},{"generated":{"line":31,"column":22},"source":"pages/notes.js","original":{"line":23,"column":13}},{"name":"params","generated":{"line":31,"column":23},"source":"pages/notes.js","original":{"line":23,"column":25}},{"generated":{"line":31,"column":29},"source":"pages/notes.js","original":{"line":23,"column":13}},{"name":"id","generated":{"line":31,"column":30},"source":"pages/notes.js","original":{"line":23,"column":32}},{"generated":{"line":31,"column":32},"source":"pages/notes.js","original":{"line":23,"column":2}},{"generated":{"line":33,"column":0},"source":"pages/notes.js","original":{"line":21,"column":26}},{"generated":{"line":33,"column":18},"source":"pages/notes.js","original":{"line":24,"column":35}},{"name":"GET_NOTES","generated":{"line":33,"column":40},"source":"pages/notes.js","original":{"line":24,"column":44}},{"generated":{"line":33,"column":49},"source":"pages/notes.js","original":{"line":24,"column":35}},{"generated":{"line":33,"column":51},"source":"pages/notes.js","original":{"line":24,"column":55}},{"name":"variables","generated":{"line":34,"column":0},"source":"pages/notes.js","original":{"line":24,"column":57}},{"name":"variables","generated":{"line":34,"column":4},"source":"pages/notes.js","original":{"line":24,"column":57}},{"generated":{"line":34,"column":13},"source":"pages/notes.js","original":{"line":24,"column":66}},{"generated":{"line":34,"column":15},"source":"pages/notes.js","original":{"line":24,"column":68}},{"name":"id","generated":{"line":35,"column":0},"source":"pages/notes.js","original":{"line":24,"column":70}},{"name":"id","generated":{"line":35,"column":6},"source":"pages/notes.js","original":{"line":24,"column":70}},{"generated":{"line":35,"column":8},"source":"pages/notes.js","original":{"line":24,"column":72}},{"name":"id","generated":{"line":35,"column":10},"source":"pages/notes.js","original":{"line":24,"column":70}},{"generated":{"line":36,"column":0},"source":"pages/notes.js","original":{"line":24,"column":68}},{"generated":{"line":37,"column":0},"source":"pages/notes.js","original":{"line":24,"column":55}},{"generated":{"line":37,"column":3},"source":"pages/notes.js","original":{"line":24,"column":35}},{"generated":{"line":37,"column":4},"source":"pages/notes.js","original":{"line":21,"column":26}},{"generated":{"line":38,"column":0},"source":"pages/notes.js","original":{"line":21,"column":26}},{"name":"loading","generated":{"line":38,"column":6},"source":"pages/notes.js","original":{"line":24,"column":10}},{"generated":{"line":38,"column":13},"source":"pages/notes.js","original":{"line":21,"column":26}},{"name":"loading","generated":{"line":38,"column":26},"source":"pages/notes.js","original":{"line":24,"column":10}},{"generated":{"line":38,"column":33},"source":"pages/notes.js","original":{"line":21,"column":26}},{"generated":{"line":39,"column":0},"source":"pages/notes.js","original":{"line":21,"column":26}},{"name":"error","generated":{"line":39,"column":6},"source":"pages/notes.js","original":{"line":24,"column":19}},{"generated":{"line":39,"column":11},"source":"pages/notes.js","original":{"line":21,"column":26}},{"name":"error","generated":{"line":39,"column":24},"source":"pages/notes.js","original":{"line":24,"column":19}},{"generated":{"line":39,"column":29},"source":"pages/notes.js","original":{"line":21,"column":26}},{"generated":{"line":40,"column":0},"source":"pages/notes.js","original":{"line":21,"column":26}},{"name":"data","generated":{"line":40,"column":6},"source":"pages/notes.js","original":{"line":24,"column":26}},{"generated":{"line":40,"column":10},"source":"pages/notes.js","original":{"line":21,"column":26}},{"name":"data","generated":{"line":40,"column":23},"source":"pages/notes.js","original":{"line":24,"column":26}},{"generated":{"line":40,"column":27},"source":"pages/notes.js","original":{"line":21,"column":26}},{"generated":{"line":42,"column":0},"source":"pages/notes.js","original":{"line":25,"column":2}},{"name":"loading","generated":{"line":42,"column":6},"source":"pages/notes.js","original":{"line":25,"column":6}},{"generated":{"line":42,"column":13},"source":"pages/notes.js","original":{"line":25,"column":2}},{"generated":{"line":42,"column":15},"source":"pages/notes.js","original":{"line":25,"column":15}},{"generated":{"line":42,"column":22},"source":"pages/notes.js","original":{"line":25,"column":22}},{"generated":{"line":42,"column":75},"source":"pages/notes.js","original":{"line":25,"column":15}},{"generated":{"line":43,"column":0},"source":"pages/notes.js","original":{"line":26,"column":2}},{"name":"error","generated":{"line":43,"column":6},"source":"pages/notes.js","original":{"line":26,"column":6}},{"generated":{"line":43,"column":11},"source":"pages/notes.js","original":{"line":26,"column":2}},{"generated":{"line":43,"column":13},"source":"pages/notes.js","original":{"line":26,"column":13}},{"generated":{"line":43,"column":20},"source":"pages/notes.js","original":{"line":26,"column":20}},{"generated":{"line":43,"column":69},"source":"pages/notes.js","original":{"line":26,"column":13}},{"generated":{"line":44,"column":0},"source":"pages/notes.js","original":{"line":27,"column":2}},{"generated":{"line":44,"column":9},"source":"pages/notes.js","original":{"line":27,"column":9}},{"generated":{"line":44,"column":38},"source":"pages/notes.js","original":{"line":27,"column":10}},{"generated":{"line":44,"column":51},"source":"pages/notes.js","original":{"line":27,"column":9}},{"generated":{"line":45,"column":0},"source":"pages/notes.js","original":{"line":27,"column":15}},{"generated":{"line":45,"column":4},"source":"pages/notes.js","original":{"line":27,"column":15}},{"generated":{"line":45,"column":8},"source":"pages/notes.js","original":{"line":27,"column":19}},{"name":"data","generated":{"line":45,"column":10},"source":"pages/notes.js","original":{"line":27,"column":21}},{"generated":{"line":45,"column":14},"source":"pages/notes.js","original":{"line":27,"column":25}},{"name":"note","generated":{"line":45,"column":15},"source":"pages/notes.js","original":{"line":27,"column":26}},{"generated":{"line":46,"column":0},"source":"pages/notes.js","original":{"line":27,"column":9}},{"generated":{"line":46,"column":4},"source":"pages/notes.js","original":{"line":27,"column":2}},{"generated":{"line":47,"column":0},"source":"pages/notes.js","original":{"line":29,"column":1}},{"generated":{"line":47,"column":1},"source":"pages/notes.js","original":{"line":21,"column":0}},{"name":"NotePage","generated":{"line":49,"column":15},"source":"pages/notes.js","original":{"line":31,"column":15}}],"sources":{"pages/notes.js":"import React from \"react\";\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport Note from '../components/Note';\r\n\r\nconst GET_NOTES = gql`\r\n  query note($id: ID!) {\r\n    note(id: $id) {\r\n      id\r\n      createdAt\r\n      content\r\n      favoriteCount\r\n      author {\r\n        username\r\n        id\r\n        avatar\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst NotePage = props => {\r\n\r\n  const id = props.match.params.id;\r\n  const { loading, error, data } = useQuery(GET_NOTES, { variables: { id } });\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error!</p>;\r\n  return <Note note={data.note} />\r\n  \r\n}\r\n\r\nexport default NotePage;"},"lineCount":null}},"error":null,"hash":"8420f842c3c87609bdd5f08c8ae2a23c","cacheData":{"env":{}}}